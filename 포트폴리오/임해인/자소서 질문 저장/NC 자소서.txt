자신의 성장에 가장 큰 도움이 되었던 프로젝트 또는 업무 경험은 무엇인가요? 프로젝트/업무의 세부 내용, 자신의 역할 및 노력, 마음가짐 등은 어떠하였나요? 그리고 그 과정에서 깨닫거나 배운 점에 대해 자세하게 들려주세요. 

<1차>
컴퓨터 그래픽스 과목의 텀 프로젝트입니다. 
첫번째 이유는 많은 과목에서 게임을 만들고 프로그래밍을 하였지만,  본 프로젝트에서 처음으로 팀원이 상대적으로 역량이 아쉬웠습니다. 주도적으로 리드를 하면서 개발을 경험하게 되었습니다. 내용의 이해가 부족한 상황에서의 개발 진행은 어려움이 많았습니다. 역할을 분배하는 것부터 난이도를 고려하고 마감 기간까지의 계획을 고민하는 것까지 많은 부분들을 신경써야했었습니다.
그 과정에서 제 부족함이 가져올 미안하다고 생각했던 일들이 사실 진짜 미안할 일이 아닌, 소통을 통해서 빠르게 조치하고 해결될 수 있는 일임을 깨우치게 된 부분입니다. 
두번째 이유는 개발 규모에서 얻게된 성장입니다. 3D API를 활용하여 처음으로 볼륨이 큰 프로젝트를 경험하면서, 주석과 Coding Conventions의 중요함을 체험하게 되었습니다. 그리고 마주한 거대한 소스코드를 이해하고 기능을 구현하는 과정에서 두려움이 자신감으로 바뀌게된 프로젝트라 선정하였습니다.

===========================
지원하신 분야와 관련하여, 자신이 보유한 직무역량 두 가지를 제시해 주세요. 그리고 각 역량에 대한 수준, 활용 사례, 성공/실패 경험 등 자신의 이야기를 자유롭게 들려주세요. [게임 플레이 경험, 기술스택, 업무툴, 전문지식, 외국어, 자격증 등]

[DirectX12 멀티스레드 클라이언트]
졸업작품에 프레임 향상을 위하여 중점 연구과제로 선정하여 개발을 진행하였습니다. 총 4개의 스레드로 Main, Logic, 두개의 Render 스레드로 구성하였습니다. Main과 Logic은 메세지 처리와 네트워크, 그리고 게임 로직을 처리를 하고, Render 스레드는 호모지니어스로, 번갈아가면서 Command List에 Push와 Execute를 진행합니다. 본래 멀티 커맨드 큐를 사용하려 하였으나, 생각보다 성능이 나오지 않았고, 실행환경의 물리 코어 개수도 고려하여, 커멘드 리스트로 구현하였습니다.
[IOCP 기반 게임 서버]
IOCP 기반의 MMORPG 게임 서버를 과제로 구현하였습니다. 기본적인 이동 및 전투 상호작용, 채팅 등의 기능부터 NPC 어그로 및 공격, 파티 기능을 구현하였습니다.
최근 관심을 가지는 부분은 멀티 CPU환경에서의 최적화에 관심을 가지고 있고, NUMA와 관련한 내용을 공부하고 있습니다.


===========================
팀 단위의 프로젝트 진행 시 프로그래밍에 있어 가장 중요하게 생각하는 부분은 무엇이며, 그 이유는 무엇인가요?

<1차>
[소통]
공부를 하다보니, 어느순간부터 검색결과가 없는 시점이 가끔 생겨나고 있습니다. 이러한 상황을 마주했을 때 혼자서 다양한 시도를 해보며, 해결해보는 것 또한 훌륭한 해결법이라고 생각이 됩니다. 분명하게 이 상황을 다시 마주한다면 완벽한 해결을 할 수 있을 것입니다. 하지만 팀 단위의 경우 대체로 마감이 정해져 있고, 개인이 받은 역할에도 기간이 존재할 여지가 큽니다. 이러한 경우 연구자적인 면모가 팀 전체에게는 어쩌면 해를 끼칠 수 있을 듯합니다. 아니더라도 본인에게는 큰 산일 수 있지만, 동료 중 이러한 답을 먼저 찾아본 은인이 있을지도 모릅니다. 만약 누구도 답을 모르더라도, 연구자적인 활동을 이어나갈 수 있는 지지 혹은 허가를 받을 필요도 분명하게 있다고 생각합니다.
또한 팀 작업의 경우 코드가 합쳐지면서 발생할 수 있는 예상할 수 없는 다양한 일들이 생겨날 것이기 때문에, 이러한 부분을 최대한 억제하기 위해서는 소통을 통해서 미리 대비를 하는 것이 좋다고 생각됩니다.


<2차>
[소통]
교양 과목에서도 팀프로젝트를 하고 게임 개발 관련 과목에서도 팀 프로젝트를 진행하면서, 개발을 하는 프로젝트에서는 더 많은 소통이 필요하다는 점을 몸소 체험하였습니다. Unity의 경우 Git을 활용하여 협업하면 커밋 한번에도 프로젝트 설정이 고장나기도 하고, 구성원들이 개발을 하면서 별거아닌 문제에서도 몰입하여 답을 못찾는 경우도 많았습니다. 소통을 통하여 서로의 상황을 체크하기도 하고, 개발 전체의 컨디션을 관리하는 것도 가능하다고 생각합니다.
[검증]
프로젝트를 하면서 마감이 임박하여 작은 수정을 하면서 당연하게 문제가 없을 것이라고, 겨우 이정도 고쳤는데 문제가 있겠냐고 생각하면서 커밋을 했었고, 커밋을 받은 팀원에게 연락을 받고 급하게 수정한 기억이 있습니다. 다행이 팀원이 원인 파악을 빠르게 해주었어서 해결이 되었지만 아니였다면 큰 재앙이 되었을 수도 있었습니다. 그후 검증에 더 집중해서 협업을 하고 있고 검증은 팀원과 미래의 나를 위한 배려라고 생각합니다.